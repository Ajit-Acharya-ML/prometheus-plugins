process_cpu_user_seconds_total = EXTRACT_SCALAR(process_cpu_user_seconds_total, value=DIFF(value))
process_cpu_system_seconds_total = EXTRACT_SCALAR(process_cpu_system_seconds_total, value=DIFF(value))
process_cpu_seconds_total = EXTRACT_SCALAR(process_cpu_seconds_total, value=DIFF(value))
process_start_time_seconds = EXTRACT_SCALAR(process_start_time_seconds, value)
process_resident_memory_bytes = EXTRACT_SCALAR(process_resident_memory_bytes, value)
process_virtual_memory_bytes = EXTRACT_SCALAR(process_virtual_memory_bytes, value)
process_heap_bytes = EXTRACT_SCALAR(process_heap_bytes, value)
process_open_fds = EXTRACT_SCALAR(process_open_fds, value)
process_max_fds = EXTRACT_SCALAR(process_max_fds, value)
nodejs_eventloop_lag_seconds = EXTRACT_SCALAR(nodejs_eventloop_lag_seconds, value)
nodejs_eventloop_lag_min_seconds = EXTRACT_SCALAR(nodejs_eventloop_lag_min_seconds, value)
nodejs_eventloop_lag_max_seconds = EXTRACT_SCALAR(nodejs_eventloop_lag_max_seconds, value)
nodejs_eventloop_lag_mean_seconds = EXTRACT_SCALAR(nodejs_eventloop_lag_mean_seconds, value)
nodejs_eventloop_lag_stddev_seconds = EXTRACT_SCALAR(nodejs_eventloop_lag_stddev_seconds, value)
nodejs_active_handles_total = EXTRACT_SCALAR(nodejs_active_handles_total, value)
nodejs_active_requests_total = EXTRACT_SCALAR(nodejs_active_requests_total, value)
nodejs_heap_size_total_bytes = EXTRACT_SCALAR(nodejs_heap_size_total_bytes, value)
nodejs_heap_size_used_bytes = EXTRACT_SCALAR(nodejs_heap_size_used_bytes, value)
nodejs_external_memory_bytes = EXTRACT_SCALAR(nodejs_external_memory_bytes, value)
nodejs_version = EXTRACT_SCALAR_FROM_TABLE(nodejs_version_info, version)

t1 = EXTRACT_TABLE(nodejs_active_handles, type, value)
t1new.AddColumn(handlesCount, t1.SELECT(SUM(value) GROUPBY type))

t2 = EXTRACT_TABLE(numOfRequests, method, value=DIFF(value))
requests.AddColumn(requestCount, t2.SELECT(value GROUPBY method))

t3 = EXTRACT_TABLE(pathsTaken, path, value=DIFF(value))
transactions.AddColumn(transactionCount, t3.SELECT(value GROUPBY path))
totalTransaction.AddColumn(totalTransactions, t3.SELECT(SUM(value) GROUPBY tablename))

t5 = EXTRACT_TABLE(responses, method, path, status, value=DIFF(value))
t5.Divide(avgResponse, sum / count)

t4 = EXTRACT_TABLE(nodejs_heap_space_size_total_bytes, space, value)
t4.Append(EXTRACT_TABLE(nodejs_heap_space_size_used_bytes, space, value))
t4.Append(EXTRACT_TABLE(nodejs_heap_space_size_available_bytes, space, value))
heapStats.AddColumn(total, t4.SELECT(SUM(value) WHERE tablename=="nodejs_heap_space_size_total_bytes" GROUPBY space))
heapStats.AddColumn(used, t4.SELECT(SUM(value) WHERE tablename=="nodejs_heap_space_size_used_bytes" GROUPBY space))
heapStats.AddColumn(available, t4.SELECT(SUM(value) WHERE tablename=="nodejs_heap_space_size_available_bytes" GROUPBY space))

t7 = EXTRACT_TABLE(nodejs_gc_duration_seconds, kind, value=DIFF(value))
gcStats.AddColumn(gct, t7.SELECT(sum GROUPBY kind))
gcStats.AddColumn(gc, t7.SELECT(count GROUPBY kind))
t5.ADD_FIELD_DEFAULT("4xx",0)
t5.ADD_FIELD_DEFAULT("5xx",0)
t5.ADD_FIELD_DEFAULT("error",0)
t5.ADD_FIELD_WITH_ATTRIB_VAL_FOR_MATCHING_PREFIX(4xx,count,"4*",status)
t5.ADD_FIELD_WITH_ATTRIB_VAL_FOR_MATCHING_PREFIX(5xx,count,"5*",status)
t5.ADD_FIELD_WITH_ATTRIB_VAL_FOR_MATCHING_PREFIX(error,count,"4*",status)
t5.ADD_FIELD_WITH_ATTRIB_VAL_FOR_MATCHING_PREFIX(error,count,"5*",status)
CONVERT_TO_FLOAT(t5.status)
totalTxn = CONVERT_TO_SCALAR(totalTransaction.totalTransactions)
nodejs.RENDER(_documentType:nodejsStats, totalTransactions: totalTxn, process_cpu_user_seconds_total : process_cpu_user_seconds_total, process_cpu_system_seconds_total : process_cpu_system_seconds_total, process_cpu_seconds_total : process_cpu_seconds_total, process_start_time_seconds : process_start_time_seconds, process_resident_memory_bytes : process_resident_memory_bytes, process_virtual_memory_bytes : process_virtual_memory_bytes, process_heap_bytes : process_heap_bytes, process_open_fds : process_open_fds, process_max_fds : process_max_fds, nodejs_eventloop_lag_seconds : nodejs_eventloop_lag_seconds, nodejs_eventloop_lag_min_seconds : nodejs_eventloop_lag_min_seconds, nodejs_eventloop_lag_max_seconds : nodejs_eventloop_lag_max_seconds, nodejs_eventloop_lag_mean_seconds : nodejs_eventloop_lag_mean_seconds, nodejs_eventloop_lag_stddev_seconds : nodejs_eventloop_lag_stddev_seconds, nodejs_active_handles_total : nodejs_active_handles_total, nodejs_active_requests_total : nodejs_active_requests_total, nodejs_heap_size_total_bytes : nodejs_heap_size_total_bytes, nodejs_heap_size_used_bytes : nodejs_heap_size_used_bytes, nodejs_external_memory_bytes : nodejs_external_memory_bytes, nodejsVersion : nodejs_version, nodejsActiveHandlers : t1new, nodejsHeapStats:heapStats, nodejsGCStats: gcStats, nodejsRequestByMethod : requests, nodejsTransactions: transactions, nodejsResponseStats:t5)